---

## **Summary Workflow**
1. **Local Setup**:
   ```bash
   git init && git add . & git commit -m "First commit"
   ```
2. **SSH Setup**:
   ```bash
   ssh-keygen -t ed25519 -C "your_email@example.com"
   cat ~/.ssh/id_ed25519.pub | xclip  # Copy to clipboard
   Action: Copy to SSH key of github.com
   ```
3. **Push**:
   ```bash
   # Create the repo
   git remote add origin git@github.com:user/repo.git
   # Push for the first time
   git push -u origin main
   ```


---

# **Git/CGit Workflow Manual**
*From local setup to secure remote collaboration (with SSH authentication)*

---

## **1. Initialize a Local Git Repository**
```bash
# Create project directory
mkdir my-project
cd my-project

# Initialize Git
git init

# Create first commit (required before pushing)
touch README.md
git add .
git commit -m "Initial commit"
```

---

## **2. Set Up Secure Authentication (SSH)**
### **Generate SSH Key**
```bash
ssh-keygen -t ed25519 -C "your_email@example.com"
```
- Press **Enter 3 times** (uses default settings)
- This creates:
  - Private key: `~/.ssh/id_ed25519` (never share!)
  - Public key: `~/.ssh/id_ed25519.pub`

### **Add SSH Key to GitHub/GitLab**
1. Copy your public key:
   ```bash
   cat ~/.ssh/id_ed25519.pub
   ```
2. Add to your account:
   - **GitHub**: [Settings → SSH Keys](https://github.com/settings/keys)
   - **GitLab**: [Preferences → SSH Keys](https://gitlab.com/-/profile/keys)

---

## **3. Connect to Remote Repository**
### **Option A: SSH (Recommended)**
```bash
git remote add origin git@github.com:username/repo.git  # GitHub
git remote add origin git@gitlab.com:username/repo.git  # GitLab
```

### **Option B: HTTPS (For Token-Based Auth)**
```bash
git remote add origin https://github.com/username/repo.git
```
*Note: Requires [Personal Access Token](https://github.com/settings/tokens) instead of password*

---

## **4. Push to Remote (First Time)**
```bash
# Verify remote
git remote -v

# Rename branch if needed (GitHub uses 'main')
git branch -M main

# Push with upstream tracking
git push -u origin main
```

---

## **5. Troubleshooting**
### **Error: "Authentication Failed"**
- **For SSH**:
  ```bash
  # Test SSH connection
  ssh -T git@github.com
  ```
  - If fails, verify:
    - SSH key added to GitHub/GitLab
    - Remote URL uses `git@github.com:...` (not HTTPS)

- **For HTTPS**:
  - Use a [PAT (Personal Access Token)](https://github.com/settings/tokens) as password

### **Error: "Remote origin already exists"**
```bash
git remote remove origin
git remote add origin git@github.com:username/repo.git
```

### **Error: "src refspec main does not match any"**
```bash
# Ensure you have commits
git log

# Rename branch if needed
git branch -M main
```

---

## **6. Key Commands Cheatsheet**
| Task | Command |
|------|---------|
| Initialize | `git init` |
| Check Branch | `git branch` |
| Rename Branch | `git branch -M main` |
| Add Remote | `git remote add origin git@github.com:user/repo.git` |
| First Push | `git push -u origin main` |
| Clone via SSH | `git clone git@github.com:user/repo.git` |

---

## **7. Security Best Practices**
1. **Always use SSH** for authentication
2. **Never share** your private key (`id_ed25519`)
3. **Revoke compromised keys** immediately via GitHub/GitLab settings
4. For teams:
   ```bash
   # Restrict SSH key access
   chmod 600 ~/.ssh/id_ed25519
   ```

